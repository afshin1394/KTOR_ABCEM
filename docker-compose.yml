version: '3.8'

services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"   # Expose NGINX on host port 80
      - "443:443" # Expose NGINX on host port 443 for HTTPS
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro  # Mount SSL certificates
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - app-network

  app:
    image: abcem:latest
    env_file:
      - .env.staging
    depends_on:
      - primary-db
      - redis
      - kafka
      # Remove or comment out the following lines to prevent direct access
    ports:
      - "8081:80"   # Host port 8081 mapped to container port 80
      - "5005:5005"     # Debugging port (optional)
    command: >
      java -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
      -jar abcem.jar
    restart: unless-stopped
    networks:
      - app-network

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - app-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "12181:2181"
    restart: unless-stopped
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    ports:
      - "9094:9092"
    restart: unless-stopped
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: afshinsamiei94@gmail.com
      PGADMIN_DEFAULT_PASSWORD: test
    ports:
      - "5050:80"
    depends_on:
      - primary-db
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    restart: unless-stopped
    networks:
      - app-network

  primary-db:
    image: postgres:15
    container_name: primary-db
    environment:
      POSTGRES_DB: abcem_primary_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: afshin1994
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - primary-db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - app-network

volumes:
  primary-db-data:
  pgadmin-data:

networks:
  app-network:
